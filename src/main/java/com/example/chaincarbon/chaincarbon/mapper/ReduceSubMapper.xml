<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chaincarbon.mapper.ReduceSubMapper">
  <resultMap id="BaseResultMap" type="com.example.chaincarbon.model.pojo.ReduceSub">
    <id column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="login" jdbcType="VARCHAR" property="login" />
    <result column="carbon_ticket_tranfer" jdbcType="VARCHAR" property="carbonTicketTranfer" />
    <result column="carbon_ticket_sign" jdbcType="VARCHAR" property="carbonTicketSign" />
    <result column="financing_application" jdbcType="VARCHAR" property="financingApplication" />
    <result column="financing_contract" jdbcType="VARCHAR" property="financingContract" />
    <result column="reduce_chain" jdbcType="VARCHAR" property="reduceChain" />
    <result column="carbon_ticket_balance" jdbcType="INTEGER" property="carbonTicketBalance" />
    <result column="blockchain_wallet_key" jdbcType="VARCHAR" property="blockchainWalletKey" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    name, email, login, carbon_ticket_tranfer, carbon_ticket_sign, financing_application, 
    financing_contract, reduce_chain, carbon_ticket_balance, blockchain_wallet_key
  </sql>
  <select id="selectByExample" parameterType="com.example.chaincarbon.model.pojo.ReduceSubExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reduce_affiliated_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reduce_affiliated_company
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reduce_affiliated_company
    where name = #{name,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.chaincarbon.model.pojo.ReduceSub">
    insert into reduce_affiliated_company (name, email, login, 
      carbon_ticket_tranfer, carbon_ticket_sign, 
      financing_application, financing_contract, 
      reduce_chain, carbon_ticket_balance, blockchain_wallet_key
      )
    values (#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{login,jdbcType=VARCHAR}, 
      #{carbonTicketTranfer,jdbcType=VARCHAR}, #{carbonTicketSign,jdbcType=VARCHAR}, 
      #{financingApplication,jdbcType=VARCHAR}, #{financingContract,jdbcType=VARCHAR}, 
      #{reduceChain,jdbcType=VARCHAR}, #{carbonTicketBalance,jdbcType=INTEGER}, #{blockchainWalletKey,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.chaincarbon.model.pojo.ReduceSub">
    insert into reduce_affiliated_company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="login != null">
        login,
      </if>
      <if test="carbonTicketTranfer != null">
        carbon_ticket_tranfer,
      </if>
      <if test="carbonTicketSign != null">
        carbon_ticket_sign,
      </if>
      <if test="financingApplication != null">
        financing_application,
      </if>
      <if test="financingContract != null">
        financing_contract,
      </if>
      <if test="reduceChain != null">
        reduce_chain,
      </if>
      <if test="carbonTicketBalance != null">
        carbon_ticket_balance,
      </if>
      <if test="blockchainWalletKey != null">
        blockchain_wallet_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="login != null">
        #{login,jdbcType=VARCHAR},
      </if>
      <if test="carbonTicketTranfer != null">
        #{carbonTicketTranfer,jdbcType=VARCHAR},
      </if>
      <if test="carbonTicketSign != null">
        #{carbonTicketSign,jdbcType=VARCHAR},
      </if>
      <if test="financingApplication != null">
        #{financingApplication,jdbcType=VARCHAR},
      </if>
      <if test="financingContract != null">
        #{financingContract,jdbcType=VARCHAR},
      </if>
      <if test="reduceChain != null">
        #{reduceChain,jdbcType=VARCHAR},
      </if>
      <if test="carbonTicketBalance != null">
        #{carbonTicketBalance,jdbcType=INTEGER},
      </if>
      <if test="blockchainWalletKey != null">
        #{blockchainWalletKey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update reduce_affiliated_company
    <set>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.login != null">
        login = #{record.login,jdbcType=VARCHAR},
      </if>
      <if test="record.carbonTicketTranfer != null">
        carbon_ticket_tranfer = #{record.carbonTicketTranfer,jdbcType=VARCHAR},
      </if>
      <if test="record.carbonTicketSign != null">
        carbon_ticket_sign = #{record.carbonTicketSign,jdbcType=VARCHAR},
      </if>
      <if test="record.financingApplication != null">
        financing_application = #{record.financingApplication,jdbcType=VARCHAR},
      </if>
      <if test="record.financingContract != null">
        financing_contract = #{record.financingContract,jdbcType=VARCHAR},
      </if>
      <if test="record.reduceChain != null">
        reduce_chain = #{record.reduceChain,jdbcType=VARCHAR},
      </if>
      <if test="record.carbonTicketBalance != null">
        carbon_ticket_balance = #{record.carbonTicketBalance,jdbcType=INTEGER},
      </if>
      <if test="record.blockchainWalletKey != null">
        blockchain_wallet_key = #{record.blockchainWalletKey,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reduce_affiliated_company
    set name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      login = #{record.login,jdbcType=VARCHAR},
      carbon_ticket_tranfer = #{record.carbonTicketTranfer,jdbcType=VARCHAR},
      carbon_ticket_sign = #{record.carbonTicketSign,jdbcType=VARCHAR},
      financing_application = #{record.financingApplication,jdbcType=VARCHAR},
      financing_contract = #{record.financingContract,jdbcType=VARCHAR},
      reduce_chain = #{record.reduceChain,jdbcType=VARCHAR},
      carbon_ticket_balance = #{record.carbonTicketBalance,jdbcType=INTEGER},
      blockchain_wallet_key = #{record.blockchainWalletKey,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chaincarbon.model.pojo.ReduceSub">
    update reduce_affiliated_company
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="login != null">
        login = #{login,jdbcType=VARCHAR},
      </if>
      <if test="carbonTicketTranfer != null">
        carbon_ticket_tranfer = #{carbonTicketTranfer,jdbcType=VARCHAR},
      </if>
      <if test="carbonTicketSign != null">
        carbon_ticket_sign = #{carbonTicketSign,jdbcType=VARCHAR},
      </if>
      <if test="financingApplication != null">
        financing_application = #{financingApplication,jdbcType=VARCHAR},
      </if>
      <if test="financingContract != null">
        financing_contract = #{financingContract,jdbcType=VARCHAR},
      </if>
      <if test="reduceChain != null">
        reduce_chain = #{reduceChain,jdbcType=VARCHAR},
      </if>
      <if test="carbonTicketBalance != null">
        carbon_ticket_balance = #{carbonTicketBalance,jdbcType=INTEGER},
      </if>
      <if test="blockchainWalletKey != null">
        blockchain_wallet_key = #{blockchainWalletKey,jdbcType=VARCHAR},
      </if>
    </set>
    where name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chaincarbon.model.pojo.ReduceSub">
    update reduce_affiliated_company
    set email = #{email,jdbcType=VARCHAR},
      login = #{login,jdbcType=VARCHAR},
      carbon_ticket_tranfer = #{carbonTicketTranfer,jdbcType=VARCHAR},
      carbon_ticket_sign = #{carbonTicketSign,jdbcType=VARCHAR},
      financing_application = #{financingApplication,jdbcType=VARCHAR},
      financing_contract = #{financingContract,jdbcType=VARCHAR},
      reduce_chain = #{reduceChain,jdbcType=VARCHAR},
      carbon_ticket_balance = #{carbonTicketBalance,jdbcType=INTEGER},
      blockchain_wallet_key = #{blockchainWalletKey,jdbcType=VARCHAR}
    where name = #{name,jdbcType=VARCHAR}
  </update>
</mapper>