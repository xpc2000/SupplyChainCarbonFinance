<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chaincarbon.mapper.TicketRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.chaincarbon.model.pojo.TicketRecord">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="amount_carbon_ticket" jdbcType="INTEGER" property="amountCarbonTicket" />
    <result column="initiator_supply_chain" jdbcType="VARCHAR" property="initiatorSupplyChain" />
    <result column="receiver_supply_chain" jdbcType="VARCHAR" property="receiverSupplyChain" />
    <result column="initiator_name" jdbcType="VARCHAR" property="initiatorName" />
    <result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
    <result column="operation" jdbcType="INTEGER" property="operation" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="fund_use" jdbcType="VARCHAR" property="fundUse" />
    <result column="operation_data" jdbcType="TIMESTAMP" property="operationData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, amount_carbon_ticket, initiator_supply_chain, receiver_supply_chain, initiator_name, 
    receiver_name, operation, status, fund_use, operation_data
  </sql>
  <select id="selectByExample" parameterType="com.example.chaincarbon.model.pojo.TicketRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from carbon_ticket_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from carbon_ticket_records
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from carbon_ticket_records
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.chaincarbon.model.pojo.TicketRecord">
    insert into carbon_ticket_records (ID, amount_carbon_ticket, initiator_supply_chain, 
      receiver_supply_chain, initiator_name, receiver_name, 
      operation, status, fund_use, 
      operation_data)
    values (#{id,jdbcType=INTEGER}, #{amountCarbonTicket,jdbcType=INTEGER}, #{initiatorSupplyChain,jdbcType=VARCHAR}, 
      #{receiverSupplyChain,jdbcType=VARCHAR}, #{initiatorName,jdbcType=VARCHAR}, #{receiverName,jdbcType=VARCHAR}, 
      #{operation,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{fundUse,jdbcType=VARCHAR}, 
      #{operationData,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.chaincarbon.model.pojo.TicketRecord">
    insert into carbon_ticket_records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="amountCarbonTicket != null">
        amount_carbon_ticket,
      </if>
      <if test="initiatorSupplyChain != null">
        initiator_supply_chain,
      </if>
      <if test="receiverSupplyChain != null">
        receiver_supply_chain,
      </if>
      <if test="initiatorName != null">
        initiator_name,
      </if>
      <if test="receiverName != null">
        receiver_name,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="fundUse != null">
        fund_use,
      </if>
      <if test="operationData != null">
        operation_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="amountCarbonTicket != null">
        #{amountCarbonTicket,jdbcType=INTEGER},
      </if>
      <if test="initiatorSupplyChain != null">
        #{initiatorSupplyChain,jdbcType=VARCHAR},
      </if>
      <if test="receiverSupplyChain != null">
        #{receiverSupplyChain,jdbcType=VARCHAR},
      </if>
      <if test="initiatorName != null">
        #{initiatorName,jdbcType=VARCHAR},
      </if>
      <if test="receiverName != null">
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="fundUse != null">
        #{fundUse,jdbcType=VARCHAR},
      </if>
      <if test="operationData != null">
        #{operationData,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update carbon_ticket_records
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.amountCarbonTicket != null">
        amount_carbon_ticket = #{record.amountCarbonTicket,jdbcType=INTEGER},
      </if>
      <if test="record.initiatorSupplyChain != null">
        initiator_supply_chain = #{record.initiatorSupplyChain,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverSupplyChain != null">
        receiver_supply_chain = #{record.receiverSupplyChain,jdbcType=VARCHAR},
      </if>
      <if test="record.initiatorName != null">
        initiator_name = #{record.initiatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverName != null">
        receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      </if>
      <if test="record.operation != null">
        operation = #{record.operation,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.fundUse != null">
        fund_use = #{record.fundUse,jdbcType=VARCHAR},
      </if>
      <if test="record.operationData != null">
        operation_data = #{record.operationData,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update carbon_ticket_records
    set ID = #{record.id,jdbcType=INTEGER},
      amount_carbon_ticket = #{record.amountCarbonTicket,jdbcType=INTEGER},
      initiator_supply_chain = #{record.initiatorSupplyChain,jdbcType=VARCHAR},
      receiver_supply_chain = #{record.receiverSupplyChain,jdbcType=VARCHAR},
      initiator_name = #{record.initiatorName,jdbcType=VARCHAR},
      receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      operation = #{record.operation,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      fund_use = #{record.fundUse,jdbcType=VARCHAR},
      operation_data = #{record.operationData,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chaincarbon.model.pojo.TicketRecord">
    update carbon_ticket_records
    <set>
      <if test="amountCarbonTicket != null">
        amount_carbon_ticket = #{amountCarbonTicket,jdbcType=INTEGER},
      </if>
      <if test="initiatorSupplyChain != null">
        initiator_supply_chain = #{initiatorSupplyChain,jdbcType=VARCHAR},
      </if>
      <if test="receiverSupplyChain != null">
        receiver_supply_chain = #{receiverSupplyChain,jdbcType=VARCHAR},
      </if>
      <if test="initiatorName != null">
        initiator_name = #{initiatorName,jdbcType=VARCHAR},
      </if>
      <if test="receiverName != null">
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="fundUse != null">
        fund_use = #{fundUse,jdbcType=VARCHAR},
      </if>
      <if test="operationData != null">
        operation_data = #{operationData,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chaincarbon.model.pojo.TicketRecord">
    update carbon_ticket_records
    set amount_carbon_ticket = #{amountCarbonTicket,jdbcType=INTEGER},
      initiator_supply_chain = #{initiatorSupplyChain,jdbcType=VARCHAR},
      receiver_supply_chain = #{receiverSupplyChain,jdbcType=VARCHAR},
      initiator_name = #{initiatorName,jdbcType=VARCHAR},
      receiver_name = #{receiverName,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      fund_use = #{fundUse,jdbcType=VARCHAR},
      operation_data = #{operationData,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>