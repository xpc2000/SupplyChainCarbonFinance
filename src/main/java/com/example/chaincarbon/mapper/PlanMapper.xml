<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chaincarbon.mapper.PlanMapper">
  <resultMap id="BaseResultMap" type="com.example.chaincarbon.model.pojo.Plan">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="control_chain" jdbcType="VARCHAR" property="controlChain" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="amount_reduce" jdbcType="INTEGER" property="amountReduce" />
    <result column="declaration_carbon_ticket" jdbcType="INTEGER" property="declarationCarbonTicket" />
    <result column="year" jdbcType="DATE" property="year" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, control_chain, company, amount_reduce, declaration_carbon_ticket, year
  </sql>
  <select id="selectByExample" parameterType="com.example.chaincarbon.model.pojo.PlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reduce_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reduce_plan
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reduce_plan
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.chaincarbon.model.pojo.Plan">
    insert into reduce_plan (ID, control_chain, company, 
      amount_reduce, declaration_carbon_ticket, 
      year)
    values (#{id,jdbcType=INTEGER}, #{controlChain,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{amountReduce,jdbcType=INTEGER}, #{declarationCarbonTicket,jdbcType=INTEGER}, 
      #{year,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.example.chaincarbon.model.pojo.Plan">
    insert into reduce_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="controlChain != null">
        control_chain,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="amountReduce != null">
        amount_reduce,
      </if>
      <if test="declarationCarbonTicket != null">
        declaration_carbon_ticket,
      </if>
      <if test="year != null">
        year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="controlChain != null">
        #{controlChain,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="amountReduce != null">
        #{amountReduce,jdbcType=INTEGER},
      </if>
      <if test="declarationCarbonTicket != null">
        #{declarationCarbonTicket,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update reduce_plan
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.controlChain != null">
        control_chain = #{record.controlChain,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.amountReduce != null">
        amount_reduce = #{record.amountReduce,jdbcType=INTEGER},
      </if>
      <if test="record.declarationCarbonTicket != null">
        declaration_carbon_ticket = #{record.declarationCarbonTicket,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reduce_plan
    set ID = #{record.id,jdbcType=INTEGER},
      control_chain = #{record.controlChain,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      amount_reduce = #{record.amountReduce,jdbcType=INTEGER},
      declaration_carbon_ticket = #{record.declarationCarbonTicket,jdbcType=INTEGER},
      year = #{record.year,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chaincarbon.model.pojo.Plan">
    update reduce_plan
    <set>
      <if test="controlChain != null">
        control_chain = #{controlChain,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="amountReduce != null">
        amount_reduce = #{amountReduce,jdbcType=INTEGER},
      </if>
      <if test="declarationCarbonTicket != null">
        declaration_carbon_ticket = #{declarationCarbonTicket,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chaincarbon.model.pojo.Plan">
    update reduce_plan
    set control_chain = #{controlChain,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      amount_reduce = #{amountReduce,jdbcType=INTEGER},
      declaration_carbon_ticket = #{declarationCarbonTicket,jdbcType=INTEGER},
      year = #{year,jdbcType=DATE}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>