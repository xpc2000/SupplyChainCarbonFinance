<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chaincarbon.mapper.PledgeRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.chaincarbon.model.pojo.PledgeRecord">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="quota_quantity" jdbcType="INTEGER" property="quotaQuantity" />
    <result column="quota_owner" jdbcType="VARCHAR" property="quotaOwner" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="pledge_rate" jdbcType="REAL" property="pledgeRate" />
    <result column="pledge_amount" jdbcType="INTEGER" property="pledgeAmount" />
    <result column="loan_term" jdbcType="TIMESTAMP" property="loanTerm" />
    <result column="loan_interest_rate" jdbcType="REAL" property="loanInterestRate" />
    <result column="operation_data" jdbcType="TIMESTAMP" property="operationData" />
    <result column="control_chain" jdbcType="VARCHAR" property="controlChain" />
    <result column="fund_use" jdbcType="VARCHAR" property="fundUse" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, quota_quantity, quota_owner, company, pledge_rate, pledge_amount, loan_term, 
    loan_interest_rate, operation_data, control_chain, fund_use, status
  </sql>
  <select id="selectByExample" parameterType="com.example.chaincarbon.model.pojo.PledgeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from carbon_quota_pledge_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from carbon_quota_pledge_records
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from carbon_quota_pledge_records
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    insert into carbon_quota_pledge_records (ID, quota_quantity, quota_owner, 
      company, pledge_rate, pledge_amount, 
      loan_term, loan_interest_rate, operation_data, 
      control_chain, fund_use, status
      )
    values (#{id,jdbcType=INTEGER}, #{quotaQuantity,jdbcType=INTEGER}, #{quotaOwner,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{pledgeRate,jdbcType=REAL}, #{pledgeAmount,jdbcType=INTEGER}, 
      #{loanTerm,jdbcType=TIMESTAMP}, #{loanInterestRate,jdbcType=REAL}, #{operationData,jdbcType=TIMESTAMP}, 
      #{controlChain,jdbcType=VARCHAR}, #{fundUse,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    insert into carbon_quota_pledge_records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="quotaQuantity != null">
        quota_quantity,
      </if>
      <if test="quotaOwner != null">
        quota_owner,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="pledgeRate != null">
        pledge_rate,
      </if>
      <if test="pledgeAmount != null">
        pledge_amount,
      </if>
      <if test="loanTerm != null">
        loan_term,
      </if>
      <if test="loanInterestRate != null">
        loan_interest_rate,
      </if>
      <if test="operationData != null">
        operation_data,
      </if>
      <if test="controlChain != null">
        control_chain,
      </if>
      <if test="fundUse != null">
        fund_use,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="quotaQuantity != null">
        #{quotaQuantity,jdbcType=INTEGER},
      </if>
      <if test="quotaOwner != null">
        #{quotaOwner,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="pledgeRate != null">
        #{pledgeRate,jdbcType=REAL},
      </if>
      <if test="pledgeAmount != null">
        #{pledgeAmount,jdbcType=INTEGER},
      </if>
      <if test="loanTerm != null">
        #{loanTerm,jdbcType=TIMESTAMP},
      </if>
      <if test="loanInterestRate != null">
        #{loanInterestRate,jdbcType=REAL},
      </if>
      <if test="operationData != null">
        #{operationData,jdbcType=TIMESTAMP},
      </if>
      <if test="controlChain != null">
        #{controlChain,jdbcType=VARCHAR},
      </if>
      <if test="fundUse != null">
        #{fundUse,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update carbon_quota_pledge_records
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.quotaQuantity != null">
        quota_quantity = #{record.quotaQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.quotaOwner != null">
        quota_owner = #{record.quotaOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.pledgeRate != null">
        pledge_rate = #{record.pledgeRate,jdbcType=REAL},
      </if>
      <if test="record.pledgeAmount != null">
        pledge_amount = #{record.pledgeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.loanTerm != null">
        loan_term = #{record.loanTerm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loanInterestRate != null">
        loan_interest_rate = #{record.loanInterestRate,jdbcType=REAL},
      </if>
      <if test="record.operationData != null">
        operation_data = #{record.operationData,jdbcType=TIMESTAMP},
      </if>
      <if test="record.controlChain != null">
        control_chain = #{record.controlChain,jdbcType=VARCHAR},
      </if>
      <if test="record.fundUse != null">
        fund_use = #{record.fundUse,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update carbon_quota_pledge_records
    set ID = #{record.id,jdbcType=INTEGER},
      quota_quantity = #{record.quotaQuantity,jdbcType=INTEGER},
      quota_owner = #{record.quotaOwner,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      pledge_rate = #{record.pledgeRate,jdbcType=REAL},
      pledge_amount = #{record.pledgeAmount,jdbcType=INTEGER},
      loan_term = #{record.loanTerm,jdbcType=TIMESTAMP},
      loan_interest_rate = #{record.loanInterestRate,jdbcType=REAL},
      operation_data = #{record.operationData,jdbcType=TIMESTAMP},
      control_chain = #{record.controlChain,jdbcType=VARCHAR},
      fund_use = #{record.fundUse,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    update carbon_quota_pledge_records
    <set>
      <if test="quotaQuantity != null">
        quota_quantity = #{quotaQuantity,jdbcType=INTEGER},
      </if>
      <if test="quotaOwner != null">
        quota_owner = #{quotaOwner,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="pledgeRate != null">
        pledge_rate = #{pledgeRate,jdbcType=REAL},
      </if>
      <if test="pledgeAmount != null">
        pledge_amount = #{pledgeAmount,jdbcType=INTEGER},
      </if>
      <if test="loanTerm != null">
        loan_term = #{loanTerm,jdbcType=TIMESTAMP},
      </if>
      <if test="loanInterestRate != null">
        loan_interest_rate = #{loanInterestRate,jdbcType=REAL},
      </if>
      <if test="operationData != null">
        operation_data = #{operationData,jdbcType=TIMESTAMP},
      </if>
      <if test="controlChain != null">
        control_chain = #{controlChain,jdbcType=VARCHAR},
      </if>
      <if test="fundUse != null">
        fund_use = #{fundUse,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    update carbon_quota_pledge_records
    set quota_quantity = #{quotaQuantity,jdbcType=INTEGER},
      quota_owner = #{quotaOwner,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      pledge_rate = #{pledgeRate,jdbcType=REAL},
      pledge_amount = #{pledgeAmount,jdbcType=INTEGER},
      loan_term = #{loanTerm,jdbcType=TIMESTAMP},
      loan_interest_rate = #{loanInterestRate,jdbcType=REAL},
      operation_data = #{operationData,jdbcType=TIMESTAMP},
      control_chain = #{controlChain,jdbcType=VARCHAR},
      fund_use = #{fundUse,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.chaincarbon.model.pojo.PledgeRecord">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="quota_quantity" jdbcType="INTEGER" property="quotaQuantity" />
    <result column="quota_owner" jdbcType="VARCHAR" property="quotaOwner" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="pledge_rate" jdbcType="REAL" property="pledgeRate" />
    <result column="pledge_amount" jdbcType="INTEGER" property="pledgeAmount" />
    <result column="loan_term" jdbcType="TIMESTAMP" property="loanTerm" />
    <result column="loan_interest_rate" jdbcType="REAL" property="loanInterestRate" />
    <result column="operation_data" jdbcType="TIMESTAMP" property="operationData" />
    <result column="control_chain" jdbcType="VARCHAR" property="controlChain" />
    <result column="fund_use" jdbcType="VARCHAR" property="fundUse" />
    <result column="condition" jdbcType="INTEGER" property="condition" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, quota_quantity, quota_owner, company, pledge_rate, pledge_amount, loan_term, 
    loan_interest_rate, operation_data, control_chain, fund_use, condition
  </sql>
  <select id="selectByExample" parameterType="com.example.chaincarbon.model.pojo.PledgeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from carbon_quota_pledge_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from carbon_quota_pledge_records
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from carbon_quota_pledge_records
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    insert into carbon_quota_pledge_records (ID, quota_quantity, quota_owner, 
      company, pledge_rate, pledge_amount, 
      loan_term, loan_interest_rate, operation_data, 
      control_chain, fund_use, condition
      )
    values (#{id,jdbcType=INTEGER}, #{quotaQuantity,jdbcType=INTEGER}, #{quotaOwner,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{pledgeRate,jdbcType=REAL}, #{pledgeAmount,jdbcType=INTEGER}, 
      #{loanTerm,jdbcType=TIMESTAMP}, #{loanInterestRate,jdbcType=REAL}, #{operationData,jdbcType=TIMESTAMP}, 
      #{controlChain,jdbcType=VARCHAR}, #{fundUse,jdbcType=VARCHAR}, #{condition,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    insert into carbon_quota_pledge_records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="quotaQuantity != null">
        quota_quantity,
      </if>
      <if test="quotaOwner != null">
        quota_owner,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="pledgeRate != null">
        pledge_rate,
      </if>
      <if test="pledgeAmount != null">
        pledge_amount,
      </if>
      <if test="loanTerm != null">
        loan_term,
      </if>
      <if test="loanInterestRate != null">
        loan_interest_rate,
      </if>
      <if test="operationData != null">
        operation_data,
      </if>
      <if test="controlChain != null">
        control_chain,
      </if>
      <if test="fundUse != null">
        fund_use,
      </if>
      <if test="condition != null">
        condition,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="quotaQuantity != null">
        #{quotaQuantity,jdbcType=INTEGER},
      </if>
      <if test="quotaOwner != null">
        #{quotaOwner,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="pledgeRate != null">
        #{pledgeRate,jdbcType=REAL},
      </if>
      <if test="pledgeAmount != null">
        #{pledgeAmount,jdbcType=INTEGER},
      </if>
      <if test="loanTerm != null">
        #{loanTerm,jdbcType=TIMESTAMP},
      </if>
      <if test="loanInterestRate != null">
        #{loanInterestRate,jdbcType=REAL},
      </if>
      <if test="operationData != null">
        #{operationData,jdbcType=TIMESTAMP},
      </if>
      <if test="controlChain != null">
        #{controlChain,jdbcType=VARCHAR},
      </if>
      <if test="fundUse != null">
        #{fundUse,jdbcType=VARCHAR},
      </if>
      <if test="condition != null">
        #{condition,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update carbon_quota_pledge_records
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.quotaQuantity != null">
        quota_quantity = #{record.quotaQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.quotaOwner != null">
        quota_owner = #{record.quotaOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.pledgeRate != null">
        pledge_rate = #{record.pledgeRate,jdbcType=REAL},
      </if>
      <if test="record.pledgeAmount != null">
        pledge_amount = #{record.pledgeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.loanTerm != null">
        loan_term = #{record.loanTerm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loanInterestRate != null">
        loan_interest_rate = #{record.loanInterestRate,jdbcType=REAL},
      </if>
      <if test="record.operationData != null">
        operation_data = #{record.operationData,jdbcType=TIMESTAMP},
      </if>
      <if test="record.controlChain != null">
        control_chain = #{record.controlChain,jdbcType=VARCHAR},
      </if>
      <if test="record.fundUse != null">
        fund_use = #{record.fundUse,jdbcType=VARCHAR},
      </if>
      <if test="record.condition != null">
        condition = #{record.condition,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update carbon_quota_pledge_records
    set ID = #{record.id,jdbcType=INTEGER},
      quota_quantity = #{record.quotaQuantity,jdbcType=INTEGER},
      quota_owner = #{record.quotaOwner,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      pledge_rate = #{record.pledgeRate,jdbcType=REAL},
      pledge_amount = #{record.pledgeAmount,jdbcType=INTEGER},
      loan_term = #{record.loanTerm,jdbcType=TIMESTAMP},
      loan_interest_rate = #{record.loanInterestRate,jdbcType=REAL},
      operation_data = #{record.operationData,jdbcType=TIMESTAMP},
      control_chain = #{record.controlChain,jdbcType=VARCHAR},
      fund_use = #{record.fundUse,jdbcType=VARCHAR},
      condition = #{record.condition,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    update carbon_quota_pledge_records
    <set>
      <if test="quotaQuantity != null">
        quota_quantity = #{quotaQuantity,jdbcType=INTEGER},
      </if>
      <if test="quotaOwner != null">
        quota_owner = #{quotaOwner,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="pledgeRate != null">
        pledge_rate = #{pledgeRate,jdbcType=REAL},
      </if>
      <if test="pledgeAmount != null">
        pledge_amount = #{pledgeAmount,jdbcType=INTEGER},
      </if>
      <if test="loanTerm != null">
        loan_term = #{loanTerm,jdbcType=TIMESTAMP},
      </if>
      <if test="loanInterestRate != null">
        loan_interest_rate = #{loanInterestRate,jdbcType=REAL},
      </if>
      <if test="operationData != null">
        operation_data = #{operationData,jdbcType=TIMESTAMP},
      </if>
      <if test="controlChain != null">
        control_chain = #{controlChain,jdbcType=VARCHAR},
      </if>
      <if test="fundUse != null">
        fund_use = #{fundUse,jdbcType=VARCHAR},
      </if>
      <if test="condition != null">
        condition = #{condition,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chaincarbon.model.pojo.PledgeRecord">
    update carbon_quota_pledge_records
    set quota_quantity = #{quotaQuantity,jdbcType=INTEGER},
      quota_owner = #{quotaOwner,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      pledge_rate = #{pledgeRate,jdbcType=REAL},
      pledge_amount = #{pledgeAmount,jdbcType=INTEGER},
      loan_term = #{loanTerm,jdbcType=TIMESTAMP},
      loan_interest_rate = #{loanInterestRate,jdbcType=REAL},
      operation_data = #{operationData,jdbcType=TIMESTAMP},
      control_chain = #{controlChain,jdbcType=VARCHAR},
      fund_use = #{fundUse,jdbcType=VARCHAR},
      condition = #{condition,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>